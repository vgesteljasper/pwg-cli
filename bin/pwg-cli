#!/usr/bin/env node

const
  program       = require('commander'),
  boxen         = require('boxen'),
  chalk         = require('chalk'),
  clipboardy    = require('clipboardy'),
  Password      = require('pwg'),
  buildSetting  = require('./../lib/buildSetting.js')

// get parameters from commander

program
  .option('-l, --length <n>', 'The length of the password to be generated', parseInt)
  .option('-d, --digits <n>', 'The amount of digits in the password', parseInt)
  .option('-s, --symbols <n>', 'The amount of symbols in the password', parseInt)
  .option('-a, --amount <n>', 'The amount of passwords to print', parseInt)
  .option('-S, --silent', 'Don\'t print options panel')
  .option('-N, --nocopy', 'Don\'t copy password to clipboard')
  .parse(process.argv)

const {
  length:   lengthParam,
  digits:   digitParam,
  symbols:  symbolParam,
  amount:   amountParam,
  silent:   silentParam,
  nocopy:   noCopyParam
} = program

const silent = (typeof silentParam === 'undefined')
  ? false
  : true

const noCopy = (typeof noCopyParam === 'undefined')
  ? false
  : true

// parse parameters and settings

const builtSettings = buildSetting({
  length:  { param: lengthParam,  fallback: 20,  name: '--length, -l' },
  digits:  { param: digitParam,   fallback: 0,   name: '--digits, -d' },
  symbols: { param: symbolParam,  fallback: 0,   name: '--symbols, -s' },
  amount:  { param: amountParam,  fallback: 1,   name: '--amount, -a' }
})

const { length, digits, symbols, amount } = builtSettings

// only print options panel is --silent, -S flag is not set

if (!silent) {

  // setup interface

  let settings = ''
  for (let key in builtSettings) {
    settings += `${builtSettings[key].string}\n`
  }

  const box = boxen(settings, {
    margin: 0,
    padding: { top: 1, right: 5, bottom: 0, left: 3 },
    borderColor: 'blue'
  })

  // log parsed settings

  console.log(box)
}

// print passwords

if (length.value >= digits.value + symbols.value) {

  const password = new Password(length.value, digits.value, symbols.value)
  let print = ''

  if (amount.value === 1) {

    print = String(password)
    if (!noCopy) clipboardy.writeSync(print)

  } else {

    for (let i = 0; i < amount.value; i++) {
      print += (i === 0)
        ? String(password)
        : `\n${password}`
    }

  }

  console.log(print)

} else {
  console.log(`\n${chalk.red('Configuration error:\n==>')} length needs to be >= digits + symbols`)
}
